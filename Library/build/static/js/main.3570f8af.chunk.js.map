{"version":3,"sources":["components/Header.js","components/Alert.js","components/Form.js","components/BookItem.js","components/Stats.js","components/Library.js","App.js","serviceWorker.js","index.js"],"names":["Header","useState","quote","setQuote","useEffect","getQuote","a","async","fetch","response","json","data","quotes","randomQuote","Math","floor","random","length","className","author","Alert","getStyle","display","props","backgroundColor","bgColor","width","margin","padding","borderRadius","textAlign","color","fontWeight","style","this","text","React","Component","Form","titleRef","createRef","authorRef","pagesRef","languageRef","genreRef","readRef","createBook","e","preventDefault","current","value","alert","book","title","pages","language","genre","read","checked","addBook","currentTarget","reset","onSubmit","htmlFor","type","name","ref","BookItem","confirmDelete","window","confirm","deleteBook","index","readStatus","status","handleChange","updateBook","details","onChange","href","onClick","Stats","readStats","books","count","forEach","key","Object","keys","totalBooks","Library","map","App","state","Date","now","setState","setTimeout","bind","localStorageRef","localStorage","getItem","JSON","parse","setItem","stringify","handleCheckbox","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3570f8af.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nfunction Header() {\r\n\r\n\tconst [quote, setQuote] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetQuote();\r\n\t}, []);\r\n\r\n\tconst getQuote = async () => {\r\n\t\tconst response = await fetch(`https://api.myjson.com/bins/k00c2`);\r\n\t\tconst data = await response.json();\r\n\r\n\t\tlet quotes = data.quotes;\r\n\t\tlet randomQuote = Math.floor(Math.random() * quotes.length);\r\n\t\tsetQuote(quotes[randomQuote]);\r\n\t};\r\n\r\n  return (\r\n    <div className=\"Header\">\r\n    \t<blockquote className='quote'>{quote.quote}</blockquote>\r\n\t\t<cite className='quote-author'>{quote.author}</cite>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nclass Alert extends React.Component {\r\n\tgetStyle = () => {\r\n\t\treturn {\r\n\t\t\tdisplay: this.props.display,\r\n\t\t\tbackgroundColor: this.props.bgColor,\r\n\t\t  \twidth: '30%',\r\n\t\t  \tmargin: '2rem auto',\r\n\t\t  \tpadding: '.5rem 0',\r\n\t\t  \tborderRadius: '5px',\r\n\t\t  \ttextAlign: 'center',\r\n\t\t  \tcolor: 'white',\r\n\t\t  \tfontWeight: 'bold'\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='alert' style={this.getStyle()}>{this.props.text}</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Alert;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from './Alert';\r\n\r\nclass Form extends React.Component {\r\n\ttitleRef = React.createRef();\r\n\tauthorRef = React.createRef();\r\n\tpagesRef = React.createRef();\r\n\tlanguageRef = React.createRef();\r\n\tgenreRef = React.createRef();\r\n\treadRef = React.createRef();\r\n\r\n\t static propTypes = {\r\n\t \taddBook: PropTypes.func\r\n\t };\r\n\r\n\tcreateBook = (e) => {\r\n\t\t// 1. Prevent refresh\r\n\t\te.preventDefault();\r\n\t\t// 2. Create Book\r\n\t\tif(this.titleRef.current.value === '') {\r\n\t\t\tthis.props.alert('block', 'Please enter a title', 'darkred');\r\n\t\t} else {\r\n\t\t\tconst book = {\r\n\t\t\t\ttitle: this.titleRef.current.value,\r\n\t\t\t\tauthor: this.authorRef.current.value,\r\n\t\t\t\tpages: this.pagesRef.current.value,\r\n\t\t\t\tlanguage: this.languageRef.current.value,\r\n\t\t\t\tgenre: this.genreRef.current.value,\r\n\t\t\t\tread: this.readRef.current.checked\r\n\t\t\t}\r\n\t\t\tthis.props.addBook(book);\r\n\t\t\tthis.props.alert('block', 'Book Added', 'green');\r\n\t\t\t// 3. Reset form\r\n\t\t\te.currentTarget.reset();\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t  return (\r\n\t    <div className=\"form-section\">\r\n\t    \t<div className=\"container-title\">\r\n\t\t\t\t\t<h2>Add a Book</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Alert display={this.props.display} bgColor={this.props.bgColor} text={this.props.text}/>\r\n\t\t\t\t<div className=\"form-book\">\r\n\t\t\t\t\t<form onSubmit={this.createBook}>\r\n\t\t\t\t\t\t<div className='form'>\r\n\t\t\t\t\t\t\t<div className='form-row'>\r\n\t\t\t            \t\t<div className=\"form-group\">\r\n\t\t\t                \t\t<label htmlFor=\"title\">Title</label>\r\n\t\t\t                \t\t<input type=\"text\" name='title' className=\"title\" ref={this.titleRef} />\r\n\t\t\t            \t\t</div>\r\n\t\t\t            \t\t<div className=\"form-group\">\r\n\t\t\t                    \t<label htmlFor=\"language\">Language</label>\r\n\t\t\t                \t\t<select className='language'  ref={this.languageRef}>\r\n\t\t\t                \t\t\t<option value=\"English\">English</option>\r\n\t\t\t                \t\t\t<option value=\"Deutsch\">Deutsch</option>\r\n\t\t\t                \t\t\t<option value=\"Español\">Español</option>\r\n\t\t\t                \t\t\t<option value=\"Français\">Français</option>\r\n\t\t\t                \t\t\t<option value=\"Italiano\">Italiano</option>\r\n\t\t\t                \t\t\t<option value=\"Magyar\">Magyar</option>\r\n\t\t\t                \t\t\t<option value=\"Português\">Português</option>\r\n\t\t\t                \t\t\t<option value=\"Other\">Other</option>\r\n\t\t\t                \t\t</select> \r\n\t\t\t                \t</div>\r\n\t\t\t            \t</div>\r\n\t\t\t            \t<div className='form-row'>\r\n\t\t\t            \t\t<div className=\"form-group\">\r\n\t\t\t                \t\t<label htmlFor=\"author\">Author</label>\r\n\t\t\t                \t\t<input type=\"text\" name='author' className=\"author\" ref={this.authorRef} />\r\n\t\t\t            \t\t</div>\r\n\t\t\t            \t\t<div className=\"form-group\">\r\n\t\t\t                \t\t<label htmlFor=\"genre\">Genre</label>\r\n\t\t\t                \t\t<select className='genre' ref={this.genreRef}>\r\n\t\t\t                \t\t\t<option value=\"Novel\">Novel</option>\r\n\t\t\t                \t\t\t<option value=\"Biography\">Biography</option>\r\n\t\t\t                \t\t\t<option value=\"History\">History</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"Philosophy\">Philosophy</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"Poetry\">Poetry</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"Religion\">Religion</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"Self Help\">Self Help</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"Short Stories\">Short Stories</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"Other\">Other</option>\r\n\t\t\t\t\t\t\t\t\t</select> \r\n\t\t\t            \t\t</div>\r\n\t\t\t            \t</div>\r\n\t\t\t            \t<div className='form-row'>\r\n\t\t\t            \t\t<div className=\"form-group\">\r\n\t\t\t                    \t<label htmlFor=\"pages\">Number of pages</label>\r\n\t\t\t                    \t<input type=\"number\" name='pages' className=\"pages\" ref={this.pagesRef} />\r\n\t\t\t                \t</div>\r\n\t\t\t                \t<div className=\"form-checkbox\">\r\n\t\t\t                    \t<input type=\"checkbox\" name='read' className=\"read\" ref={this.readRef} />\r\n\t\t\t  \t\t\t\t\t\t<label htmlFor=\"read\"> Read</label>\r\n\t\t\t                \t</div>\r\n\t\t\t                </div>\r\n\t                \t</div>\r\n\t        \t\t\t<input type=\"submit\" value=\"ADD BOOK\" className=\"form-button\" />\r\n\t        \t\t</form>\r\n\t\t\t\t</div>\r\n\t    </div>\r\n\t  );\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BookItem extends React.Component {\r\n    static propTypes = {\r\n        deleteBook: PropTypes.func,\r\n        updateBook: PropTypes.func,\r\n        index: PropTypes.string,\r\n        details: PropTypes.shape({\r\n            title: PropTypes.string,\r\n            author: PropTypes.string,\r\n            pages: PropTypes.number,\r\n            language: PropTypes.string,\r\n            genre: PropTypes.string,\r\n            read: PropTypes.bool\r\n        })\r\n    };\r\n\r\n    confirmDelete = () => {\r\n            if(window.confirm('Are you sure you want to delete this entry?')) {\r\n                this.props.deleteBook(this.props.index)\r\n                this.props.alert('block', 'Book Deleted', 'darkred');\r\n            }\r\n        };\r\n\r\n    readStatus = (status) => {\r\n        let readValue;\r\n\r\n        if(status === true) {\r\n            readValue = 'Read';\r\n        } else {\r\n            readValue = 'Not Read';\r\n        }\r\n        return readValue;\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.props.updateBook(e.currentTarget.checked, this.props.index);\r\n    };\r\n\r\n    render() {\r\n        // Destructuring\r\n        const { title, author, pages, language, genre, read } = this.props.details;\r\n        \r\n      return (\r\n            <tr>\r\n                <td>{title}</td>\r\n                <td>{author}</td>\r\n                <td>{pages}</td>\r\n                <td>{language}</td>\r\n                <td>{genre}</td>\r\n                <td>{this.readStatus(read)} <input type='checkbox' name='read' className=\"read\" checked={read} onChange={this.handleChange}/></td>\r\n                <td><button href=\"#\" className=\"delete-button delete\" onClick={this.confirmDelete}>X</button></td>\r\n            </tr>\r\n      );\r\n  }\r\n}\r\n\r\nexport default BookItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Stats extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tbooks: PropTypes.arrayOf(PropTypes.shape({\r\n            title: PropTypes.string,\r\n            author: PropTypes.string,\r\n            pages: PropTypes.number,\r\n            language: PropTypes.string,\r\n            genre: PropTypes.string,\r\n            read: PropTypes.bool\r\n        }))\r\n\t};\r\n\r\n\treadStats = (books) => {\r\n\t\tlet count = 0;\r\n\r\n\t\tbooks.forEach(key => {\r\n\t\t\tif(this.props.books[key].read === true) {\r\n\t\t\t\tcount += 1;\r\n\t\t\t}\r\n\t\t});\t\r\n\t\t\r\n\t\treturn count;\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst books = Object.keys(this.props.books);\r\n\t\tconst totalBooks = books.length;\r\n\r\n\t\treturn (\r\n\t\t\t<div className='stats'>\r\n\t\t\t\t<p>{totalBooks} book(s)</p>\r\n\t\t\t\t<p>{this.readStats(books)} read</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Stats;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BookItem from './BookItem';\r\nimport Stats from './Stats';\r\n\r\nclass Library extends Component {\r\n    static propTypes = {\r\n        books: PropTypes.arrayOf(PropTypes.shape({\r\n            title: PropTypes.string,\r\n            author: PropTypes.string,\r\n            pages: PropTypes.number,\r\n            language: PropTypes.string,\r\n            genre: PropTypes.string,\r\n            read: PropTypes.bool\r\n        })),\r\n        updateBook: PropTypes.func,\r\n        deleteBook: PropTypes.func\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Library\">\r\n            \t<div className=\"container-title\">\r\n        \t\t\t<h2>Library</h2>\r\n        \t\t</div>\r\n\r\n                <Stats books={this.props.books}/>\r\n\r\n            \t<table>\r\n                \t<thead>\r\n                    \t<tr>\r\n    \t                    <th>TITLE</th>\r\n    \t                    <th>AUTHOR</th>\r\n    \t                    <th>PAGES</th>\r\n    \t                    <th>LANGUAGE</th>\r\n    \t                    <th>GENRE</th>\r\n    \t                    <th>READ</th>\r\n    \t                    <th></th>\r\n                    \t</tr>\r\n                \t</thead>\r\n                \t<tbody className=\"book-list\">\r\n                       {Object.keys(this.props.books).map(key => (\r\n                            <BookItem books={this.props.books} key={key} index={key} details={this.props.books[key]} updateBook={this.props.updateBook} deleteBook={this.props.deleteBook} alert={this.props.alert} />\r\n                            ))}\r\n                \t</tbody>\r\n            \t</table>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Library;","import React from 'react';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport Library from './components/Library';\nimport './App.css';\n\nclass App extends React.Component {\n\n  state = {\n    books: [],\n    alert: {\n      display: 'none',\n      text: '',\n      bgColor: ''\n    }\n  } \n\n  componentDidMount() {\n    // Reinstate localStorage\n    const localStorageRef = localStorage.getItem('books');\n\n    if(localStorageRef) {\n      this.setState({ books: JSON.parse(localStorageRef) })\n    }\n  };\n\n  componentDidUpdate() {\n    localStorage.setItem('books', JSON.stringify(this.state.books))\n  };\n\n  // Add Book\n  addBook = (book) => {\n    // 1. Take a copy of the existing state\n    const books = {...this.state.books};\n    // 2. Add new book to books\n    books[`book${Date.now()}`] = book;\n    // 3. Set the new books obj to state\n    this.setState({ books });\n  };\n\n  updateBook = (readStatus, key) => {\n    // 1. Take a copy of the existing state\n    const books = {...this.state.books};\n    // 2. Update read status\n    books[key].read = readStatus;\n    // 3. Set new read status to state\n    this.setState({ books });\n  };\n\n  deleteBook = (key) => {\n    // 1. Take copy of state\n    const books = { ...this.state.books };\n    // 2. Update the state\n    delete books[key];\n    // 3. Update state\n    this.setState({ books });\n  };\n\n  alert = (display, text, bgColor) => {\n    this.setState({ display, text, bgColor });\n    setTimeout(\n      function() {\n        this.setState({ display: 'none', text: '', bgColor: '' });\n      }\n      .bind(this),\n      3000\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className='container'>\n          <Header />\n          <Form addBook={this.addBook} handleCheckbox={this.handleCheckbox} alert={this.alert} display={this.state.display} text={this.state.text} bgColor={this.state.bgColor} />\n          <Library books={this.state.books} updateBook={this.updateBook} deleteBook={this.deleteBook} alert={this.alert} text={this.state.text} bgColor={this.state.bgColor} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}